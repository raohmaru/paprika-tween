{
  "version": 3,
  "sources": ["../src/easing/back.js", "../src/easing/bounce.js", "../src/easing/circular.js", "../src/easing/cubic.js", "../src/easing/elastic.js", "../src/easing/exponential.js", "../src/easing/linear.js", "../src/easing/quadratic.js", "../src/easing/quartic.js", "../src/easing/quintic.js", "../src/easing/sinusoidal.js"],
  "sourcesContent": ["const s = 1.70158;\nconst sa = 1.70158 * 1.525;\n\nexport const Back = {\n    In(t) {\n        return t * t * ((s + 1) * t - s);\n    },\n    Out(t) {\n        return --t * t * ((s + 1) * t + s) + 1;\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return 0.5 * (t * t * ((sa + 1) * t - sa));\n        }\n        return 0.5 * ((t -= 2) * t * ((sa + 1) * t + sa) + 2);\n    }\n};\n", "function In(t) {\n    return 1 - Out(1 - t);\n}\n\nfunction Out(t) {\n    if (t < (1 / 2.75)) {\n        return 7.5625 * t * t;\n    } else if (t < (2 / 2.75)) {\n        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n    } else if (t < (2.5 / 2.75)) {\n        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n    } else {\n        return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n    }\n}\n\nexport const Bounce = {\n    In,\n    Out,\n    InOut(t) {\n        if (t < 0.5) {\n            return In(t * 2) * 0.5;\n        }\n        return Out(t * 2 - 1) * 0.5 + 0.5;\n    }\n};\n", "const sqrt = Math.sqrt;\n\nexport const Circular = {\n    In(t) {\n        return 1 - sqrt(1 - t * t);\n    },\n    Out(t) {\n        return sqrt(1 - (--t * t));\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return - 0.5 * (sqrt(1 - t * t) - 1);\n        }\n        return 0.5 * (sqrt(1 - (t -= 2) * t) + 1);\n    }\n};\n", "export const Cubic = {\n    In(t) {\n        return t * t * t;\n    },\n    Out(t) {\n        return --t * t * t + 1;\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return 0.5 * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t + 2);\n    }\n};\n", "export const Elastic = {\n    In(t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        return -Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI);\n    },\n    Out(t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        return Math.pow(2, -10 * t) * Math.sin((t - 0.1) * 5 * Math.PI) + 1;\n    },\n    InOut(t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        t *= 2;\n        if (t < 1) {\n            return -0.5 * Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI);\n        }\n        return 0.5 * Math.pow(2, -10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI) + 1;\n    }\n};\n", "export const Exponential = {\n    In(t) {\n        return t === 0 ? 0 : Math.pow(1024, t - 1);\n    },\n    Out(t) {\n        return t === 1 ? 1 : 1 - Math.pow(2, - 10 * t);\n    },\n    InOut(t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if ((t *= 2) < 1) {\n            return 0.5 * Math.pow(1024, t - 1);\n        }\n        return 0.5 * (- Math.pow(2, - 10 * (t - 1)) + 2);\n    }\n};\n", "export const Linear = {\n    None: (t) => t\n};\n", "export const Quadratic = {\n    In(t) {\n        return t * t;\n    },\n    Out(t) {\n        return t * (2 - t);\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return 0.5 * t * t;\n        }\n        return - 0.5 * (--t * (t - 2) - 1);\n    }\n};\n", "export const Quartic = {\n    In(t) {\n        return t * t * t * t;\n    },\n    Out(t) {\n        return 1 - (--t * t * t * t);\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return 0.5 * t * t * t * t;\n        }\n        return - 0.5 * ((t -= 2) * t * t * t - 2);\n    }\n};\n", "export const Quintic = {\n    In(t) {\n        return t * t * t * t * t;\n    },\n    Out(t) {\n        return --t * t * t * t * t + 1;\n    },\n    InOut(t) {\n        if ((t *= 2) < 1) {\n            return 0.5 * t * t * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    }\n};\n", "export const Sinusoidal = {\n    In(t) {\n        return 1 - Math.cos(t * Math.PI / 2);\n    },\n    Out(t) {\n        return Math.sin(t * Math.PI / 2);\n    },\n    InOut(t) {\n        return 0.5 * (1 - Math.cos(Math.PI * t));\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
